{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/friendship/Documents/dev/ghost-leg/ver_2/src/Components/CaseList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport styled, { css } from \"styled-components\";\n\nconst Case = ({\n  idx,\n  value,\n  gameState,\n  inputCase,\n  resultColor\n}) => {\n  return /*#__PURE__*/_jsxDEV(CaseWrapper, {\n    children: gameState === \"setting\" || gameState === \"ready\" ? /*#__PURE__*/_jsxDEV(CaseInput, {\n      placeholder: `case ${idx + 1}`,\n      gameState: gameState,\n      onChange: e => inputCase(e, idx),\n      value: value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(CaseBox, {\n      resultColor: gameState === \"done\" && resultColor,\n      children: value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Case;\n\nconst CaseList = ({\n  players,\n  gameState,\n  results,\n  cases,\n  checkReady,\n  inputCase\n}) => {\n  _s();\n\n  useEffect(() => {\n    console.log(gameState, cases);\n    cases !== {} && checkReady(cases, gameState);\n  }, [cases]);\n  return /*#__PURE__*/_jsxDEV(CaseListWrapper, {\n    children: players.map((_, idx) => /*#__PURE__*/_jsxDEV(Case, {\n      idx: idx,\n      value: cases[idx],\n      gameState: gameState,\n      inputCase: inputCase,\n      resultColor: players[results[idx]] && players[results[idx]].color\n    }, idx, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CaseList, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c2 = CaseList;\nexport default CaseList;\nconst CaseListWrapper = styled.ul`\n  display: flex;\n  justify-content: space-around;\n  margin: 0 auto;\n  width: 80%;\n\n  @media ${({\n  theme\n}) => theme.mobile} {\n    width: 100%;\n  }\n`;\n_c3 = CaseListWrapper;\nconst CaseWrapper = styled.li`\n  width: 20%;\n  padding: 0 0.5%;\n`;\n_c4 = CaseWrapper;\nconst caseStyle = css`\n  height: 4rem;\n  width: 100%;\n  border: 2px solid cornflowerblue;\n  border-radius: 5px;\n  font-size: 1.6rem;\n  text-align: center;\n\n  @media ${({\n  theme\n}) => theme.mobile} {\n    height: 3rem;\n    font-size: 1.4rem;\n  }\n`;\nconst CaseInput = styled.input`\n  ${caseStyle};\n\n  &::placeholder {\n    text-align: center;\n    font-size: 1.6rem;\n  }\n\n  @media ${({\n  theme\n}) => theme.mobile} {\n    &::placeholder {\n      font-size: 1.4rem;\n    }\n  }\n`;\n_c5 = CaseInput;\nconst CaseBox = styled.div`\n  ${caseStyle};\n  color: white;\n  background-color: ${({\n  resultColor\n}) => resultColor || \"cornflowerblue\"};\n  border: none;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n_c6 = CaseBox;\n\nvar _c, _c2, _c3, _c4, _c5, _c6;\n\n$RefreshReg$(_c, \"Case\");\n$RefreshReg$(_c2, \"CaseList\");\n$RefreshReg$(_c3, \"CaseListWrapper\");\n$RefreshReg$(_c4, \"CaseWrapper\");\n$RefreshReg$(_c5, \"CaseInput\");\n$RefreshReg$(_c6, \"CaseBox\");","map":{"version":3,"sources":["/Users/friendship/Documents/dev/ghost-leg/ver_2/src/Components/CaseList.js"],"names":["React","useEffect","styled","css","Case","idx","value","gameState","inputCase","resultColor","e","CaseList","players","results","cases","checkReady","console","log","map","_","color","CaseListWrapper","ul","theme","mobile","CaseWrapper","li","caseStyle","CaseInput","input","CaseBox","div"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\nimport styled, { css } from \"styled-components\";\n\nconst Case = ({ idx, value, gameState, inputCase, resultColor }) => {\n  return (\n    <CaseWrapper>\n      {gameState === \"setting\" || gameState === \"ready\" ? (\n        <CaseInput\n          placeholder={`case ${idx + 1}`}\n          gameState={gameState}\n          onChange={(e) => inputCase(e, idx)}\n          value={value}\n        />\n      ) : (\n        <CaseBox resultColor={gameState === \"done\" && resultColor}>\n          {value}\n        </CaseBox>\n      )}\n    </CaseWrapper>\n  );\n};\n\nconst CaseList = ({\n  players,\n  gameState,\n  results,\n  cases,\n  checkReady,\n  inputCase,\n}) => {\n  useEffect(() => {\n    console.log(gameState, cases);\n    cases !== {} && checkReady(cases, gameState);\n  }, [cases]);\n\n  return (\n    <CaseListWrapper>\n      {players.map((_, idx) => (\n        <Case\n          key={idx}\n          idx={idx}\n          value={cases[idx]}\n          gameState={gameState}\n          inputCase={inputCase}\n          resultColor={players[results[idx]] && players[results[idx]].color}\n        />\n      ))}\n    </CaseListWrapper>\n  );\n};\n\nexport default CaseList;\n\nconst CaseListWrapper = styled.ul`\n  display: flex;\n  justify-content: space-around;\n  margin: 0 auto;\n  width: 80%;\n\n  @media ${({ theme }) => theme.mobile} {\n    width: 100%;\n  }\n`;\n\nconst CaseWrapper = styled.li`\n  width: 20%;\n  padding: 0 0.5%;\n`;\n\nconst caseStyle = css`\n  height: 4rem;\n  width: 100%;\n  border: 2px solid cornflowerblue;\n  border-radius: 5px;\n  font-size: 1.6rem;\n  text-align: center;\n\n  @media ${({ theme }) => theme.mobile} {\n    height: 3rem;\n    font-size: 1.4rem;\n  }\n`;\n\nconst CaseInput = styled.input`\n  ${caseStyle};\n\n  &::placeholder {\n    text-align: center;\n    font-size: 1.6rem;\n  }\n\n  @media ${({ theme }) => theme.mobile} {\n    &::placeholder {\n      font-size: 1.4rem;\n    }\n  }\n`;\n\nconst CaseBox = styled.div`\n  ${caseStyle};\n  color: white;\n  background-color: ${({ resultColor }) => resultColor || \"cornflowerblue\"};\n  border: none;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n"]},"metadata":{},"sourceType":"module"}