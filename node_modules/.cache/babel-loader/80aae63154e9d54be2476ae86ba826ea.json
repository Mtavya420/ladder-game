{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/friendship/Documents/dev/ghost-leg/ver_2/src/Containers/CanvasContainer.js\",\n    _s = $RefreshSig$();\n\nimport Canvas from \"Components/Canvas\";\nimport React, { useRef } from \"react\";\nimport PathsContainer from \"./PathsContainer\";\n\nconst CanvasContainer = () => {\n  _s();\n\n  const ref = useRef();\n  const canvas = ref.current;\n  const ctx = canvas.getContext(\"2d\");\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Canvas, {\n      ref: ref,\n      ctx: ctx\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this), \";\", /*#__PURE__*/_jsxDEV(PathsContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(CanvasContainer, \"QMBuJFIdzLIeqBcFwhMf246mjOM=\");\n\n_c = CanvasContainer;\nexport default CanvasContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"CanvasContainer\");","map":{"version":3,"sources":["/Users/friendship/Documents/dev/ghost-leg/ver_2/src/Containers/CanvasContainer.js"],"names":["Canvas","React","useRef","PathsContainer","CanvasContainer","ref","canvas","current","ctx","getContext"],"mappings":";;;;;;AAAA,OAAOA,MAAP,MAAmB,mBAAnB;AACA,OAAOC,KAAP,IAAgBC,MAAhB,QAA8B,OAA9B;AACA,OAAOC,cAAP,MAA2B,kBAA3B;;AAEA,MAAMC,eAAe,GAAG,MAAM;AAAA;;AAC5B,QAAMC,GAAG,GAAGH,MAAM,EAAlB;AACA,QAAMI,MAAM,GAAGD,GAAG,CAACE,OAAnB;AACA,QAAMC,GAAG,GAAGF,MAAM,CAACG,UAAP,CAAkB,IAAlB,CAAZ;AAEA,sBACE;AAAA,4BACE,QAAC,MAAD;AAAQ,MAAA,GAAG,EAAEJ,GAAb;AAAkB,MAAA,GAAG,EAAEG;AAAvB;AAAA;AAAA;AAAA;AAAA,YADF,oBAEE,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA,kBADF;AAMD,CAXD;;GAAMJ,e;;KAAAA,e;AAaN,eAAeA,eAAf","sourcesContent":["import Canvas from \"Components/Canvas\";\nimport React, { useRef } from \"react\";\nimport PathsContainer from \"./PathsContainer\";\n\nconst CanvasContainer = () => {\n  const ref = useRef();\n  const canvas = ref.current;\n  const ctx = canvas.getContext(\"2d\");\n\n  return (\n    <>\n      <Canvas ref={ref} ctx={ctx} />;\n      <PathsContainer />\n    </>\n  );\n};\n\nexport default CanvasContainer;\n"]},"metadata":{},"sourceType":"module"}