{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/friendship/Documents/dev/ghost-leg/ver_2/src/Containers/PathsContainer.js\",\n    _s = $RefreshSig$();\n\n/* eslint-disable react-hooks/exhaustive-deps */\nimport Paths from \"Components/Paths\";\nimport React, { useRef, useEffect, useCallback, useContext, useState } from \"react\";\nimport { Context } from \"Context\";\n\nconst PathsContainer = ({\n  idx,\n  canvasRef\n}) => {\n  _s();\n\n  const {\n    state\n  } = useContext(Context);\n  const {\n    players,\n    playerCount\n  } = state;\n  const [canvas, setCanvas] = useState(null);\n  let draw = null;\n  const ctx = canvas && canvas.getContext(\"2d\");\n  const canvasWidth = canvas && canvas.width;\n  const canvasHeight = canvas && canvas.height;\n  const viewPort = window.innerWidth > 812 ? \"pc\" : \"mobile\";\n  const radius = viewPort === \"pc\" ? 2 : 1.5;\n  const gapX = canvasWidth / (playerCount * 2);\n  const gapY = canvasHeight / 10;\n  const diff = gapX * (2 * idx + 1);\n  let posX = idx === 0 ? diff + 1 : idx === playerCount - 1 ? diff - 1 : diff;\n  let posY = radius;\n\n  const drawFootprint = () => {\n    ctx.beginPath();\n    ctx.arc(posX, posY, radius, 0, Math.PI * 10);\n    ctx.fillStyle = players[idx].color;\n    ctx.fill();\n    ctx.closePath();\n  };\n\n  const drawPath = () => {\n    if (posY === canvasHeight) {\n      clearInterval(draw);\n      return;\n    }\n\n    posY += radius;\n    drawFootprint();\n  };\n\n  useEffect(() => {\n    setCanvas(canvasRef.current);\n\n    if (canvas) {\n      draw = setInterval(() => drawPath, 50);\n    }\n\n    console.log(canvasRef);\n  }, [canvasRef, canvas]);\n  return /*#__PURE__*/_jsxDEV(Paths, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 10\n  }, this);\n};\n\n_s(PathsContainer, \"qqb7gCZ2dILAKQeO45DStuZ+rBA=\");\n\n_c = PathsContainer;\nexport default PathsContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"PathsContainer\");","map":{"version":3,"sources":["/Users/friendship/Documents/dev/ghost-leg/ver_2/src/Containers/PathsContainer.js"],"names":["Paths","React","useRef","useEffect","useCallback","useContext","useState","Context","PathsContainer","idx","canvasRef","state","players","playerCount","canvas","setCanvas","draw","ctx","getContext","canvasWidth","width","canvasHeight","height","viewPort","window","innerWidth","radius","gapX","gapY","diff","posX","posY","drawFootprint","beginPath","arc","Math","PI","fillStyle","color","fill","closePath","drawPath","clearInterval","current","setInterval","console","log"],"mappings":";;;;;AAAA;AACA,OAAOA,KAAP,MAAkB,kBAAlB;AACA,OAAOC,KAAP,IACEC,MADF,EAEEC,SAFF,EAGEC,WAHF,EAIEC,UAJF,EAKEC,QALF,QAMO,OANP;AAOA,SAASC,OAAT,QAAwB,SAAxB;;AAEA,MAAMC,cAAc,GAAG,CAAC;AAAEC,EAAAA,GAAF;AAAOC,EAAAA;AAAP,CAAD,KAAwB;AAAA;;AAC7C,QAAM;AAAEC,IAAAA;AAAF,MAAYN,UAAU,CAACE,OAAD,CAA5B;AACA,QAAM;AAAEK,IAAAA,OAAF;AAAWC,IAAAA;AAAX,MAA2BF,KAAjC;AACA,QAAM,CAACG,MAAD,EAASC,SAAT,IAAsBT,QAAQ,CAAC,IAAD,CAApC;AACA,MAAIU,IAAI,GAAG,IAAX;AAEA,QAAMC,GAAG,GAAGH,MAAM,IAAIA,MAAM,CAACI,UAAP,CAAkB,IAAlB,CAAtB;AACA,QAAMC,WAAW,GAAGL,MAAM,IAAIA,MAAM,CAACM,KAArC;AACA,QAAMC,YAAY,GAAGP,MAAM,IAAIA,MAAM,CAACQ,MAAtC;AACA,QAAMC,QAAQ,GAAGC,MAAM,CAACC,UAAP,GAAoB,GAApB,GAA0B,IAA1B,GAAiC,QAAlD;AACA,QAAMC,MAAM,GAAGH,QAAQ,KAAK,IAAb,GAAoB,CAApB,GAAwB,GAAvC;AACA,QAAMI,IAAI,GAAGR,WAAW,IAAIN,WAAW,GAAG,CAAlB,CAAxB;AACA,QAAMe,IAAI,GAAGP,YAAY,GAAG,EAA5B;AACA,QAAMQ,IAAI,GAAGF,IAAI,IAAI,IAAIlB,GAAJ,GAAU,CAAd,CAAjB;AACA,MAAIqB,IAAI,GAAGrB,GAAG,KAAK,CAAR,GAAYoB,IAAI,GAAG,CAAnB,GAAuBpB,GAAG,KAAKI,WAAW,GAAG,CAAtB,GAA0BgB,IAAI,GAAG,CAAjC,GAAqCA,IAAvE;AACA,MAAIE,IAAI,GAAGL,MAAX;;AAEA,QAAMM,aAAa,GAAG,MAAM;AAC1Bf,IAAAA,GAAG,CAACgB,SAAJ;AACAhB,IAAAA,GAAG,CAACiB,GAAJ,CAAQJ,IAAR,EAAcC,IAAd,EAAoBL,MAApB,EAA4B,CAA5B,EAA+BS,IAAI,CAACC,EAAL,GAAU,EAAzC;AACAnB,IAAAA,GAAG,CAACoB,SAAJ,GAAgBzB,OAAO,CAACH,GAAD,CAAP,CAAa6B,KAA7B;AACArB,IAAAA,GAAG,CAACsB,IAAJ;AACAtB,IAAAA,GAAG,CAACuB,SAAJ;AACD,GAND;;AAQA,QAAMC,QAAQ,GAAG,MAAM;AACrB,QAAIV,IAAI,KAAKV,YAAb,EAA2B;AACzBqB,MAAAA,aAAa,CAAC1B,IAAD,CAAb;AACA;AACD;;AACDe,IAAAA,IAAI,IAAIL,MAAR;AAEAM,IAAAA,aAAa;AACd,GARD;;AAUA7B,EAAAA,SAAS,CAAC,MAAM;AACdY,IAAAA,SAAS,CAACL,SAAS,CAACiC,OAAX,CAAT;;AACA,QAAI7B,MAAJ,EAAY;AACVE,MAAAA,IAAI,GAAG4B,WAAW,CAAC,MAAMH,QAAP,EAAiB,EAAjB,CAAlB;AACD;;AACDI,IAAAA,OAAO,CAACC,GAAR,CAAYpC,SAAZ;AACD,GANQ,EAMN,CAACA,SAAD,EAAYI,MAAZ,CANM,CAAT;AAQA,sBAAO,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CA5CD;;GAAMN,c;;KAAAA,c;AA8CN,eAAeA,cAAf","sourcesContent":["/* eslint-disable react-hooks/exhaustive-deps */\nimport Paths from \"Components/Paths\";\nimport React, {\n  useRef,\n  useEffect,\n  useCallback,\n  useContext,\n  useState,\n} from \"react\";\nimport { Context } from \"Context\";\n\nconst PathsContainer = ({ idx, canvasRef }) => {\n  const { state } = useContext(Context);\n  const { players, playerCount } = state;\n  const [canvas, setCanvas] = useState(null);\n  let draw = null;\n\n  const ctx = canvas && canvas.getContext(\"2d\");\n  const canvasWidth = canvas && canvas.width;\n  const canvasHeight = canvas && canvas.height;\n  const viewPort = window.innerWidth > 812 ? \"pc\" : \"mobile\";\n  const radius = viewPort === \"pc\" ? 2 : 1.5;\n  const gapX = canvasWidth / (playerCount * 2);\n  const gapY = canvasHeight / 10;\n  const diff = gapX * (2 * idx + 1);\n  let posX = idx === 0 ? diff + 1 : idx === playerCount - 1 ? diff - 1 : diff;\n  let posY = radius;\n\n  const drawFootprint = () => {\n    ctx.beginPath();\n    ctx.arc(posX, posY, radius, 0, Math.PI * 10);\n    ctx.fillStyle = players[idx].color;\n    ctx.fill();\n    ctx.closePath();\n  };\n\n  const drawPath = () => {\n    if (posY === canvasHeight) {\n      clearInterval(draw);\n      return;\n    }\n    posY += radius;\n\n    drawFootprint();\n  };\n\n  useEffect(() => {\n    setCanvas(canvasRef.current);\n    if (canvas) {\n      draw = setInterval(() => drawPath, 50);\n    }\n    console.log(canvasRef);\n  }, [canvasRef, canvas]);\n\n  return <Paths />;\n};\n\nexport default PathsContainer;\n"]},"metadata":{},"sourceType":"module"}