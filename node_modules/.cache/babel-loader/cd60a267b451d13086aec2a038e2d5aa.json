{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/friendship/Documents/dev/ghost-leg/ver_2/src/Containers/PathsContainer.js\",\n    _s = $RefreshSig$();\n\nimport Paths from \"Components/Paths\";\nimport React, { useRef } from \"react\";\n\nconst PathsContainer = () => {\n  _s();\n\n  const canvasRef = useRef(null);\n\n  const getRef = (ref, canvas, ctx) => {\n    canvas = ref && ref.current;\n    ctx = canvas && canvas.getContext(\"2d\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(Paths, {\n    canvasRef: canvasRef,\n    getRef: getRef\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 10\n  }, this);\n};\n\n_s(PathsContainer, \"hw7YJ5TVw+lAu0tRkzoDS8rL7/E=\");\n\n_c = PathsContainer;\nexport default PathsContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"PathsContainer\");","map":{"version":3,"sources":["/Users/friendship/Documents/dev/ghost-leg/ver_2/src/Containers/PathsContainer.js"],"names":["Paths","React","useRef","PathsContainer","canvasRef","getRef","ref","canvas","ctx","current","getContext"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,kBAAlB;AACA,OAAOC,KAAP,IAAgBC,MAAhB,QAA8B,OAA9B;;AAEA,MAAMC,cAAc,GAAG,MAAM;AAAA;;AAC3B,QAAMC,SAAS,GAAGF,MAAM,CAAC,IAAD,CAAxB;;AACA,QAAMG,MAAM,GAAG,CAACC,GAAD,EAAMC,MAAN,EAAcC,GAAd,KAAsB;AACnCD,IAAAA,MAAM,GAAGD,GAAG,IAAIA,GAAG,CAACG,OAApB;AACAD,IAAAA,GAAG,GAAGD,MAAM,IAAIA,MAAM,CAACG,UAAP,CAAkB,IAAlB,CAAhB;AACD,GAHD;;AAKA,sBAAO,QAAC,KAAD;AAAO,IAAA,SAAS,EAAEN,SAAlB;AAA6B,IAAA,MAAM,EAAEC;AAArC;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CARD;;GAAMF,c;;KAAAA,c;AAUN,eAAeA,cAAf","sourcesContent":["import Paths from \"Components/Paths\";\nimport React, { useRef } from \"react\";\n\nconst PathsContainer = () => {\n  const canvasRef = useRef(null);\n  const getRef = (ref, canvas, ctx) => {\n    canvas = ref && ref.current;\n    ctx = canvas && canvas.getContext(\"2d\");\n  };\n\n  return <Paths canvasRef={canvasRef} getRef={getRef} />;\n};\n\nexport default PathsContainer;\n"]},"metadata":{},"sourceType":"module"}