{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useReducer } from \"react\";\nimport { initState, reducer } from \"Reducer\";\n\nconst useHook = () => {\n  _s();\n\n  const [state, dispatch] = useReducer(reducer, initState);\n\n  const increasePlayers = () => dispatch({\n    type: \"INCREASE_PLAYERS\"\n  });\n\n  const decreasePlayers = () => dispatch({\n    type: \"DECREASE_PLAYERS\"\n  });\n\n  const startGame = () => dispatch({\n    type: \"START_GAME\"\n  });\n\n  const getRandomNumber = (min, max) => {\n    min = Math.ceil(min);\n    max = Math.floor(max);\n    return Math.floor(Math.random() * (max - min)) + min;\n  };\n\n  const getRandomPlayers = (playerCount, data) => {\n    const players = new Set();\n\n    while (players.size < playerCount) players.add(data[getRandomNumber(0, 10)]);\n\n    dispatch({\n      type: \"GET_PLAYERS\",\n      players: [...players]\n    });\n  };\n\n  return {\n    state,\n    increasePlayers,\n    decreasePlayers,\n    startGame,\n    getRandomPlayers\n  };\n};\n\n_s(useHook, \"ivzsx5aR9qRFuEtyOcndflQiQ1Q=\");\n\nexport default useHook;","map":{"version":3,"sources":["/Users/friendship/Documents/dev/ghost-leg/ver_2/src/Hooks.js"],"names":["useReducer","initState","reducer","useHook","state","dispatch","increasePlayers","type","decreasePlayers","startGame","getRandomNumber","min","max","Math","ceil","floor","random","getRandomPlayers","playerCount","data","players","Set","size","add"],"mappings":";;AAAA,SAASA,UAAT,QAA2B,OAA3B;AACA,SAASC,SAAT,EAAoBC,OAApB,QAAmC,SAAnC;;AAEA,MAAMC,OAAO,GAAG,MAAM;AAAA;;AACpB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,UAAU,CAACE,OAAD,EAAUD,SAAV,CAApC;;AAEA,QAAMK,eAAe,GAAG,MAAMD,QAAQ,CAAC;AAAEE,IAAAA,IAAI,EAAE;AAAR,GAAD,CAAtC;;AACA,QAAMC,eAAe,GAAG,MAAMH,QAAQ,CAAC;AAAEE,IAAAA,IAAI,EAAE;AAAR,GAAD,CAAtC;;AACA,QAAME,SAAS,GAAG,MAAMJ,QAAQ,CAAC;AAAEE,IAAAA,IAAI,EAAE;AAAR,GAAD,CAAhC;;AAEA,QAAMG,eAAe,GAAG,CAACC,GAAD,EAAMC,GAAN,KAAc;AACpCD,IAAAA,GAAG,GAAGE,IAAI,CAACC,IAAL,CAAUH,GAAV,CAAN;AACAC,IAAAA,GAAG,GAAGC,IAAI,CAACE,KAAL,CAAWH,GAAX,CAAN;AACA,WAAOC,IAAI,CAACE,KAAL,CAAWF,IAAI,CAACG,MAAL,MAAiBJ,GAAG,GAAGD,GAAvB,CAAX,IAA0CA,GAAjD;AACD,GAJD;;AAMA,QAAMM,gBAAgB,GAAG,CAACC,WAAD,EAAcC,IAAd,KAAuB;AAC9C,UAAMC,OAAO,GAAG,IAAIC,GAAJ,EAAhB;;AACA,WAAOD,OAAO,CAACE,IAAR,GAAeJ,WAAtB,EACEE,OAAO,CAACG,GAAR,CAAYJ,IAAI,CAACT,eAAe,CAAC,CAAD,EAAI,EAAJ,CAAhB,CAAhB;;AACFL,IAAAA,QAAQ,CAAC;AAAEE,MAAAA,IAAI,EAAE,aAAR;AAAuBa,MAAAA,OAAO,EAAE,CAAC,GAAGA,OAAJ;AAAhC,KAAD,CAAR;AACD,GALD;;AAOA,SAAO;AACLhB,IAAAA,KADK;AAELE,IAAAA,eAFK;AAGLE,IAAAA,eAHK;AAILC,IAAAA,SAJK;AAKLQ,IAAAA;AALK,GAAP;AAOD,CA3BD;;GAAMd,O;;AA6BN,eAAeA,OAAf","sourcesContent":["import { useReducer } from \"react\";\nimport { initState, reducer } from \"Reducer\";\n\nconst useHook = () => {\n  const [state, dispatch] = useReducer(reducer, initState);\n\n  const increasePlayers = () => dispatch({ type: \"INCREASE_PLAYERS\" });\n  const decreasePlayers = () => dispatch({ type: \"DECREASE_PLAYERS\" });\n  const startGame = () => dispatch({ type: \"START_GAME\" });\n\n  const getRandomNumber = (min, max) => {\n    min = Math.ceil(min);\n    max = Math.floor(max);\n    return Math.floor(Math.random() * (max - min)) + min;\n  };\n\n  const getRandomPlayers = (playerCount, data) => {\n    const players = new Set();\n    while (players.size < playerCount)\n      players.add(data[getRandomNumber(0, 10)]);\n    dispatch({ type: \"GET_PLAYERS\", players: [...players] });\n  };\n\n  return {\n    state,\n    increasePlayers,\n    decreasePlayers,\n    startGame,\n    getRandomPlayers,\n  };\n};\n\nexport default useHook;\n"]},"metadata":{},"sourceType":"module"}